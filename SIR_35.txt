2024-11-05 12:55:33,468-PaddleLT-[INFO] ===> log path: /home/aistudio/PaddleTest/framework/e2e/PaddleLT_new/out_2024_11_05_12_55_33_468477.log
2024-11-05 12:55:33,468-PaddleLT-[INFO] ===> LayerTest.__init__ 中 device_place_id is: 0
2024-11-05 12:55:33,469-PaddleLT-[INFO] ===> 测试case名称: ooooo
2024-11-05 12:55:33,469-PaddleLT-[INFO] ===> 测试执行器: dy_eval
W1105 12:55:37.086541 983050 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 7.0, Driver API Version: 12.0, Runtime API Version: 11.8
W1105 12:55:37.087769 983050 gpu_resources.cc:164] device: 0, cuDNN Version: 8.9.
2024-11-05 12:55:37,094-PaddleLT-[INFO] ===> 测试执行器: dy2st_eval_cinn
Splited Program (fwd | bwd): 
ForwardProgram is :
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false]} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true]} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true]} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true]} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false]} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],value:(Double)2} : () -> builtin.tensor<i32>
    (%8) = "pd_op.floor_divide" (%2, %7) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%9) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],value:(Double)2} : () -> builtin.tensor<i32>
    (%10) = "pd_op.floor_divide" (%1, %9) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%11) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %11, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true]} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%10, %13) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],value:(Double)2} : () -> builtin.tensor<i32>
    (%16) = "pd_op.floor_divide" (%2, %15) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%17) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%18) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%19) = "pd_op.slice" (%3, %17, %18) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true]} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%20) = "pd_op.add" (%16, %19) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%21) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%22) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[]} : () -> builtin.tensor<0xi64>
    (%23) = "pd_op.reshape" (%21, %22) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "pd_op.cast" (%8) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[]} : () -> builtin.tensor<0xi64>
    (%26) = "pd_op.reshape" (%24, %25) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%27) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%28) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[]} : () -> builtin.tensor<0xi64>
    (%29) = "pd_op.reshape" (%27, %28) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%30) = "pd_op.cast" (%20) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%31) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[]} : () -> builtin.tensor<0xi64>
    (%32) = "pd_op.reshape" (%30, %31) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%33) = "builtin.combine" (%23, %26) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%34) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%35) = "pd_op.reshape" (%23, %34) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%36) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%37) = "pd_op.reshape" (%26, %36) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%38) = "builtin.combine" (%35, %37) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%39) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],value:(Double)0} : () -> builtin.tensor<1xi32>
    (%40) = "pd_op.concat" (%38, %39) {stop_gradient:[true]} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%41) = "builtin.combine" (%29, %32) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%42) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%43) = "pd_op.reshape" (%29, %42) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%44) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%45) = "pd_op.reshape" (%32, %44) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%46) = "builtin.combine" (%43, %45) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%47) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],value:(Double)0} : () -> builtin.tensor<1xi32>
    (%48) = "pd_op.concat" (%46, %47) {stop_gradient:[true]} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%49) = "pd_op.slice" (%0, %40, %48) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false]} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%50) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],value:(Double)1} : () -> builtin.tensor<1xi32>
    (%51) = "builtin.combine" (%49, %4) {stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%52) = "pd_op.concat" (%51, %50) {stop_gradient:[false]} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%52) {output_name:"output_0"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}
BackwardProgram is:
{
}

IR After CommonSubexpressionEliminationPass -------------------
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false]} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true]} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true]} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true]} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false]} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true]} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true]} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true]} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true]} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false]} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false]} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}

===--------------------------------------------------------------------------===
        IRPrinting on builtin.module before shape_optimization_pass pass
===--------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false]} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true]} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true]} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true]} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false]} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true]} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true]} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true]} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true]} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true]} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false]} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false]} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


W1105 12:55:37.556355 983050 shape_optimization_pass.cc:328] cached shape is not consistent with real shape
===-------------------------------------------------------------------------===
        IRPrinting on builtin.module after shape_optimization_pass pass
===-------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===---------------------------------------------------------------------------===
        IRPrinting on builtin.module before fused_gemm_epilogue_pass pass
===---------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===--------------------------------------------------------------------------===
        IRPrinting on builtin.module after fused_gemm_epilogue_pass pass
===--------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on builtin.module before fuse_parallel_matmul_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===---------------------------------------------------------------------------===
        IRPrinting on builtin.module after fuse_parallel_matmul_pass pass
===---------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===-------------------------------------------------------------------------===
        IRPrinting on builtin.module before remove_assign_out_pass pass
===-------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===------------------------------------------------------------------------===
        IRPrinting on builtin.module after remove_assign_out_pass pass
===------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===--------------------------------------------------------------------------===
        IRPrinting on builtin.module before conv2d_transpose_filter pass
===--------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===-------------------------------------------------------------------------===
        IRPrinting on builtin.module after conv2d_transpose_filter pass
===-------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===--------------------------------------------------------------------===
        IRPrinting on builtin.module before convert_MEA_to_FA pass
===--------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===-------------------------------------------------------------------===
        IRPrinting on builtin.module after convert_MEA_to_FA pass
===-------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===-----------------------------------------------------------------------===
        IRPrinting on builtin.module before convert_FA_to_QKVMHA pass
===-----------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===----------------------------------------------------------------------===
        IRPrinting on builtin.module after convert_FA_to_QKVMHA pass
===----------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


===------------------------------------------------------------------===
        IRPrinting on builtin.module before pd_to_cinn_pass pass
===------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "pd_op.slice" (%3, %8, %9) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S4]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "pd_op.slice" (%3, %9, %12) {axes:[(Int64)0],decrease_axis:[(Int64)0],infer_flags:[(Int64)1],stop_gradient:[true],sym_shape_str:"shape[], data[S5]"} : (builtin.tensor<4xi32>, builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "pd_op.reshape" (%15, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "pd_op.reshape" (%18, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "pd_op.reshape" (%20, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "pd_op.reshape" (%22, %16) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<0xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true],sym_shape_str:"shape[], data[Mul(S0, 1 / (2))], shape[], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "pd_op.reshape" (%17, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%27) = "pd_op.reshape" (%19, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))], shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "pd_op.concat" (%28, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true],sym_shape_str:"shape[], data[Add(Mul(S0, 1 / (2)), S4)], shape[], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "pd_op.reshape" (%21, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%33) = "pd_op.reshape" (%23, %25) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<i64>, builtin.tensor<1xi64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)], shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "pd_op.concat" (%34, %29) {stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]"} : (vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>], builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL], shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "pd_op.concat" (%38, %37) {stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>], builtin.tensor<1xi32>) -> builtin.tensor<1x1024x97x97xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x97x97xf32>) -> 
}


W1105 12:55:37.563933 983050 pattern_rewrite_driver.cc:225] The pattern rewrite did not converge after scanning 10 times
===-----------------------------------------------------------------===
        IRPrinting on builtin.module after pd_to_cinn_pass pass
===-----------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)3],infer_flags:[(Int64)1],starts:[(Int64)2],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)4],infer_flags:[(Int64)1],starts:[(Int64)3],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "cinn_op.reshape" (%15) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "cinn_op.reshape" (%18) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "cinn_op.reshape" (%20) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "cinn_op.reshape" (%22) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "cinn_op.reshape" (%17) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%27) = "cinn_op.reshape" (%19) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "cinn_op.concat" (%26, %27) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "cinn_op.reshape" (%21) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%33) = "cinn_op.reshape" (%23) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "cinn_op.concat" (%32, %33) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "cinn_op.concat" (%36, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------------===
        IRPrinting on builtin.module before dead_code_elimination_pass pass
===-----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[2]",value:[(Int64)2]} : () -> builtin.tensor<1xi64>
    (%9) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[3]",value:[(Int64)3]} : () -> builtin.tensor<1xi64>
    (%10) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)3],infer_flags:[(Int64)1],starts:[(Int64)2],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%6, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[4]",value:[(Int64)4]} : () -> builtin.tensor<1xi64>
    (%13) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)4],infer_flags:[(Int64)1],starts:[(Int64)3],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%14) = "pd_op.add" (%7, %13) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%15) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%16) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[0], data[]",value:[]} : () -> builtin.tensor<0xi64>
    (%17) = "cinn_op.reshape" (%15) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "cinn_op.reshape" (%18) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%20) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "cinn_op.reshape" (%20) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%22) = "pd_op.cast" (%14) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%23) = "cinn_op.reshape" (%22) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%24) = "builtin.combine" (%17, %19) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%25) = "pd_op.full_int_array" () {dtype:(pd_op.DataType)int64,place:(pd_op.Place)Place(cpu),stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:[(Int64)1]} : () -> builtin.tensor<1xi64>
    (%26) = "cinn_op.reshape" (%17) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%27) = "cinn_op.reshape" (%19) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%28) = "builtin.combine" (%26, %27) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%29) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[0]",value:(Double)0} : () -> builtin.tensor<1xi32>
    (%30) = "cinn_op.concat" (%26, %27) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%31) = "builtin.combine" (%21, %23) {stop_gradient:[true]} : (builtin.tensor<i64>, builtin.tensor<i64>) -> vec[builtin.tensor<i64>,builtin.tensor<i64>]
    (%32) = "cinn_op.reshape" (%21) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%33) = "cinn_op.reshape" (%23) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%34) = "builtin.combine" (%32, %33) {stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> vec[builtin.tensor<1xi64>,builtin.tensor<1xi64>]
    (%35) = "cinn_op.concat" (%32, %33) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%36) = "pd_op.slice" (%0, %30, %35) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%37) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(cpu),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[1]",value:(Double)1} : () -> builtin.tensor<1xi32>
    (%38) = "builtin.combine" (%36, %4) {stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> vec[builtin.tensor<1x512x-1x-1xf32>,builtin.tensor<1x512x97x97xf32>]
    (%39) = "cinn_op.concat" (%36, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%39) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on builtin.module after dead_code_elimination_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)3],infer_flags:[(Int64)1],starts:[(Int64)2],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%9) = "pd_op.add" (%6, %8) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%10) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)4],infer_flags:[(Int64)1],starts:[(Int64)3],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%7, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%13) = "cinn_op.reshape" (%12) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%14) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%15) = "cinn_op.reshape" (%14) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%16) = "pd_op.cast" (%9) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%17) = "cinn_op.reshape" (%16) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "cinn_op.reshape" (%18) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%20) = "cinn_op.reshape" (%13) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%21) = "cinn_op.reshape" (%15) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%22) = "cinn_op.concat" (%20, %21) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%23) = "cinn_op.reshape" (%17) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%24) = "cinn_op.reshape" (%19) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%25) = "cinn_op.concat" (%23, %24) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%26) = "pd_op.slice" (%0, %22, %25) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%27) = "cinn_op.concat" (%26, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%27) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------------------------===
        IRPrinting on builtin.module before fuse_shape_ops_into_generate_shape_op_pass pass
===---------------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)3],infer_flags:[(Int64)1],starts:[(Int64)2],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%9) = "pd_op.add" (%6, %8) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%10) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)4],infer_flags:[(Int64)1],starts:[(Int64)3],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%7, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%13) = "cinn_op.reshape" (%12) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%14) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%15) = "cinn_op.reshape" (%14) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%16) = "pd_op.cast" (%9) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%17) = "cinn_op.reshape" (%16) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "cinn_op.reshape" (%18) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%20) = "cinn_op.reshape" (%13) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%21) = "cinn_op.reshape" (%15) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%22) = "cinn_op.concat" (%20, %21) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%23) = "cinn_op.reshape" (%17) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%24) = "cinn_op.reshape" (%19) {shape:[(Int32)1],stop_gradient:[true]} : (builtin.tensor<i64>) -> builtin.tensor<1xi64>
    (%25) = "cinn_op.concat" (%23, %24) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%26) = "pd_op.slice" (%0, %22, %25) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%27) = "cinn_op.concat" (%26, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%27) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===--------------------------------------------------------------------------------------------===
        IRPrinting on builtin.module after fuse_shape_ops_into_generate_shape_op_pass pass
===--------------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)3],infer_flags:[(Int64)1],starts:[(Int64)2],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%9) = "pd_op.add" (%6, %8) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%10) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)4],infer_flags:[(Int64)1],starts:[(Int64)3],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%7, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%13) = "cinn_op.reshape" (%12) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%14) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%15) = "cinn_op.reshape" (%14) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%16) = "pd_op.cast" (%9) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%17) = "cinn_op.reshape" (%16) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "cinn_op.reshape" (%18) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%20) = "cinn_op.generate_shape" (%1) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0]]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "cinn_op.generate_shape" (%2) {output_dim_exprs:[["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S1",(Int64)0,(Int64)0]]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%22) = "cinn_op.concat" (%20, %21) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%23) = "cinn_op.generate_shape" (%1, %3) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>) -> builtin.tensor<1xi64>
    (%24) = "cinn_op.generate_shape" (%2, %3) {output_dim_exprs:[["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S1",(Int64)0,(Int64)0],["DataSymbolBinding","S5",(Int64)1,(Int64)3]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>) -> builtin.tensor<1xi64>
    (%25) = "cinn_op.concat" (%23, %24) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%26) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%27) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%28) = "pd_op.slice" (%0, %26, %27) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%29) = "cinn_op.concat" (%28, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%29) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------------===
        IRPrinting on builtin.module before dead_code_elimination_pass pass
===-----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "pd_op.full" () {dtype:(pd_op.DataType)int32,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[],stop_gradient:[true],sym_shape_str:"shape[], data[2]",value:(Double)2} : () -> builtin.tensor<i32>
    (%6) = "pd_op.floor_divide" (%1, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%7) = "pd_op.floor_divide" (%2, %5) {stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%8) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)3],infer_flags:[(Int64)1],starts:[(Int64)2],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%9) = "pd_op.add" (%6, %8) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%10) = "cinn_op.slice" (%3) {axes:[(Int64)0],decrease_axis:[(Int64)0],ends:[(Int64)4],infer_flags:[(Int64)1],starts:[(Int64)3],stop_gradient:[true]} : (builtin.tensor<4xi32>) -> builtin.tensor<i32>
    (%11) = "pd_op.add" (%7, %10) {stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>, builtin.tensor<i32>) -> builtin.tensor<1xi32>
    (%12) = "pd_op.cast" (%6) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S0, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%13) = "cinn_op.reshape" (%12) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%14) = "pd_op.cast" (%7) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Mul(S1, 1 / (2))]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%15) = "cinn_op.reshape" (%14) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%16) = "pd_op.cast" (%9) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S0, 1 / (2)), S4)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%17) = "cinn_op.reshape" (%16) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%18) = "pd_op.cast" (%11) {dtype:(pd_op.DataType)int64,stop_gradient:[true],sym_shape_str:"shape[1], data[Add(Mul(S1, 1 / (2)), S5)]"} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%19) = "cinn_op.reshape" (%18) {shape:[],stop_gradient:[true]} : (builtin.tensor<1xi64>) -> builtin.tensor<i64>
    (%20) = "cinn_op.generate_shape" (%1) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0]]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%21) = "cinn_op.generate_shape" (%2) {output_dim_exprs:[["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S1",(Int64)0,(Int64)0]]} : (builtin.tensor<1xi32>) -> builtin.tensor<1xi64>
    (%22) = "cinn_op.concat" (%20, %21) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%23) = "cinn_op.generate_shape" (%1, %3) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>) -> builtin.tensor<1xi64>
    (%24) = "cinn_op.generate_shape" (%2, %3) {output_dim_exprs:[["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S1",(Int64)0,(Int64)0],["DataSymbolBinding","S5",(Int64)1,(Int64)3]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>) -> builtin.tensor<1xi64>
    (%25) = "cinn_op.concat" (%23, %24) {axis:(Int32)0,stop_gradient:[true]} : (builtin.tensor<1xi64>, builtin.tensor<1xi64>) -> builtin.tensor<2xi64>
    (%26) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%27) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%28) = "pd_op.slice" (%0, %26, %27) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%29) = "cinn_op.concat" (%28, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%29) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on builtin.module after dead_code_elimination_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%6) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%7) = "pd_op.slice" (%0, %5, %6) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%8) = "cinn_op.concat" (%7, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%8) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------------===
        IRPrinting on builtin.module before fold_manipulation_ops_pass pass
===-----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%6) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%7) = "pd_op.slice" (%0, %5, %6) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%8) = "cinn_op.concat" (%7, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%8) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on builtin.module after fold_manipulation_ops_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%6) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%7) = "pd_op.slice" (%0, %5, %6) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%8) = "cinn_op.concat" (%7, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%8) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===------------------------------------------------------------------===
        IRPrinting on builtin.module before build_cinn_pass pass
===------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%6) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
    (%7) = "pd_op.slice" (%0, %5, %6) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
    (%8) = "cinn_op.concat" (%7, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%8) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------===
        IRPrinting on builtin.module after build_cinn_pass pass
===-----------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on cinn_op.group before fold_manipulation_ops_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------===
        IRPrinting on cinn_op.group after fold_manipulation_ops_pass pass
===---------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-------------------------------------------------------------------------===
        IRPrinting on builtin.module before simplify_dim_expr_pass pass
===-------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, Min(Add(104, -Mul(S0, 1 / (2))), S4), Min(Add(104, -Mul(S1, 1 / (2))), S5)], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false]} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===------------------------------------------------------------------------===
        IRPrinting on builtin.module after simplify_dim_expr_pass pass
===------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------------------------===
        IRPrinting on builtin.module before fuse_shape_ops_into_generate_shape_op_pass pass
===---------------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===--------------------------------------------------------------------------------------------===
        IRPrinting on builtin.module after fuse_shape_ops_into_generate_shape_op_pass pass
===--------------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------------===
        IRPrinting on builtin.module before fold_manipulation_ops_pass pass
===-----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on builtin.module after fold_manipulation_ops_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------------===
        IRPrinting on builtin.module before dead_code_elimination_pass pass
===-----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on builtin.module after dead_code_elimination_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------------------===
        IRPrinting on cinn_op.group before add_broadcast_to_elementwise_pass pass
===-----------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------------===
        IRPrinting on cinn_op.group after add_broadcast_to_elementwise_pass pass
===----------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------===
        IRPrinting on cinn_op.group before insert_broadcast_pass pass
===-----------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------===
        IRPrinting on cinn_op.group after insert_broadcast_pass pass
===----------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===--------------------------------------------------------------------------------------------===
        IRPrinting on cinn_op.group before fuse_shape_ops_into_generate_shape_op_pass pass
===--------------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-------------------------------------------------------------------------------------------===
        IRPrinting on cinn_op.group after fuse_shape_ops_into_generate_shape_op_pass pass
===-------------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-------------------------------------------------------------------------------------===
        IRPrinting on cinn_op.group before move_generate_shape_ops_to_prologue pass
===-------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===------------------------------------------------------------------------------------===
        IRPrinting on cinn_op.group after move_generate_shape_ops_to_prologue pass
===------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===------------------------------------------------------------------------------===
        IRPrinting on cinn_op.group before cinn_dynamic_reshape_op_pass pass
===------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------------===
        IRPrinting on cinn_op.group after cinn_dynamic_reshape_op_pass pass
===-----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on cinn_op.group before fold_manipulation_ops_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------===
        IRPrinting on cinn_op.group after fold_manipulation_ops_pass pass
===---------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on cinn_op.group before dead_code_elimination_pass pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------===
        IRPrinting on cinn_op.group after dead_code_elimination_pass pass
===---------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===------------------------------------------------------------------------===
        IRPrinting on builtin.module before add_store_in_group_op pass
===------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%9) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


W1105 12:55:37.570809 983050 pattern_rewrite_driver.cc:225] The pattern rewrite did not converge after scanning 1 times
===-----------------------------------------------------------------------===
        IRPrinting on builtin.module after add_store_in_group_op pass
===-----------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===--------------------------------------------------------------------------===
        IRPrinting on builtin.module before cinn_group_cluster_pass pass
===--------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.group" [id:232] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-------------------------------------------------------------------------===
        IRPrinting on builtin.module after cinn_group_cluster_pass pass
===-------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on builtin.module before single_op_fallback_to_phi pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------===
        IRPrinting on builtin.module after single_op_fallback_to_phi pass
===---------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------------===
        IRPrinting on builtin.module before shape_ops_fallback_to_phi_pass pass
===---------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===--------------------------------------------------------------------------------===
        IRPrinting on builtin.module after shape_ops_fallback_to_phi_pass pass
===--------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===------------------------------------------------------------------------===
        IRPrinting on cinn_op.fusion before add_store_in_group_op pass
===------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-----------------------------------------------------------------------===
        IRPrinting on cinn_op.fusion after add_store_in_group_op pass
===-----------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===----------------------------------------------------------------------------===
        IRPrinting on cinn_op.fusion before single_op_fallback_to_phi pass
===----------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------===
        IRPrinting on cinn_op.fusion after single_op_fallback_to_phi pass
===---------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===---------------------------------------------------------------------------------===
        IRPrinting on cinn_op.fusion before shape_ops_fallback_to_phi_pass pass
===---------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===--------------------------------------------------------------------------------===
        IRPrinting on cinn_op.fusion after shape_ops_fallback_to_phi_pass pass
===--------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


I1105 12:55:37.572479 983050 add_cinn_pass.cc:278] FusionOp count before lowering : *****[ 1 ]*****
Program before lowering: 
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32> { (shape[1, 512, 104, 104], data[NULL]) }	(op_106)
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32> { (shape[1], data[S0]) }	(op_107)
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32> { (shape[1], data[S1]) }	(op_108)
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32> { (shape[4], data[S2, S3, S4, S5]) }	(op_109)
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32> { (shape[1, 512, 97, 97], data[NULL]) }	(op_110)
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64> { (shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]) }	(op_235)
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64> { (shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]) }	(op_236)
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32> { (shape[1, 512, 97, 97], data[NULL]) }	(op_237)
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32> { (shape[1, 1024, 97, 97], data[NULL]) }	(op_238)
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32> { (shape[1, 1024, 97, 97], data[NULL]) }	(op_239)
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) ->  {  }	(op_241)
    } { (shape[1, 1024, 97, 97], data[NULL]) }	(op_240)
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) ->  {  }	(op_159)
}

===-------------------------------------------------------------------------------------===
        IRPrinting on builtin.module before lower_cinn_dynamic_shape_fusion_op pass
===-------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_op.fusion" [id:240] () -> builtin.tensor<1x1024x-1x-1xf32> {
        (%6) = "cinn_op.generate_shape" (%1, %2) {output_dim_exprs:[["Mul","S0",["Reciprocal",(Int64)2]],["Mul","S1",["Reciprocal",(Int64)2]]],stop_gradient:[true],sym_shape_str:"shape[2], data[Mul(S0, 1 / (2)), Mul(S1, 1 / (2))]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S1",(Int64)1,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%7) = "cinn_op.generate_shape" (%1, %3, %2) {output_dim_exprs:[["Add",["Mul","S0",["Reciprocal",(Int64)2]],"S4"],["Add",["Mul","S1",["Reciprocal",(Int64)2]],"S5"]],stop_gradient:[true],sym_shape_str:"shape[2], data[Add(Mul(S0, 1 / (2)), S4), Add(Mul(S1, 1 / (2)), S5)]",symbol_bindings:[["DataSymbolBinding","S0",(Int64)0,(Int64)0],["DataSymbolBinding","S4",(Int64)1,(Int64)2],["DataSymbolBinding","S5",(Int64)1,(Int64)3],["DataSymbolBinding","S1",(Int64)2,(Int64)0]]} : (builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1xi32>) -> builtin.tensor<2xi64>
        (%8) = "pd_op.slice" (%0, %6, %7) {axes:[(Int64)2,(Int64)3],decrease_axis:[],infer_flags:[(Int64)-1,(Int64)-1],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : (builtin.tensor<1x512x104x104xf32>, builtin.tensor<2xi64>, builtin.tensor<2xi64>) -> builtin.tensor<1x512x-1x-1xf32>
        (%9) = "cinn_op.concat" (%8, %4) {axis:(Int32)1,stop_gradient:[false],sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x512x-1x-1xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        (%10) = "cinn_op.yield_store" (%9) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
        () = "cf.yield" (%10) {} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
    }
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===------------------------------------------------------------------------------------===
        IRPrinting on builtin.module after lower_cinn_dynamic_shape_fusion_op pass
===------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_runtime.jit_kernel" (%1, %2, %3, %0, %4) {kernel_info:(0x7f08b2ebb800)} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1x512x104x104xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===-------------------------------------------------------------------------------------------===
        IRPrinting on builtin.module before split_generate_shape_into_shape_ops_pass pass
===-------------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_runtime.jit_kernel" (%1, %2, %3, %0, %4) {kernel_info:(0x7f08b2ebb800)} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1x512x104x104xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


===------------------------------------------------------------------------------------------===
        IRPrinting on builtin.module after split_generate_shape_into_shape_ops_pass pass
===------------------------------------------------------------------------------------------===
{
    (%0) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.0.var_0.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> builtin.tensor<1x512x104x104xf32>
    (%1) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.1.var_1.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> builtin.tensor<1xi32>
    (%2) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.2.var_2.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> builtin.tensor<1xi32>
    (%3) = "pd_op.data" () {dtype:(pd_op.DataType)int32,name:"_jst.3.var_3.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> builtin.tensor<4xi32>
    (%4) = "pd_op.data" () {dtype:(pd_op.DataType)float32,name:"_jst.4.var_4.0",place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> builtin.tensor<1x512x97x97xf32>
    (%5) = "cinn_runtime.jit_kernel" (%1, %2, %3, %0, %4) {kernel_info:(0x7f08b2ebb800)} : (builtin.tensor<1xi32>, builtin.tensor<1xi32>, builtin.tensor<4xi32>, builtin.tensor<1x512x104x104xf32>, builtin.tensor<1x512x97x97xf32>) -> builtin.tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%5) {output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (builtin.tensor<1x1024x-1x-1xf32>) -> 
}


I1105 12:55:38.751338 983050 add_cinn_pass.cc:292] Time of lowering and compiling program: ***** [ 1 ] ***** seconds.
I1105 12:55:38.751361 983050 add_cinn_pass.cc:296] Number of ops in the original program is: 41, after lowering it becomes: 7. (compression ratio: 7/41 = 0.170732)
IR after lowering = {
    (%0) = "data(phi_kernel)" () {dtype:(pd_op.DataType)float32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:float32>,kernel_name:"data",name:"_jst.0.var_0.0",op_name:"pd_op.data",origin_id:(Int64)244,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> undefined_tensor<1x512x104x104xf32>
    (%1) = "shadow_feed(phi_kernel)" (%0) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:float32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)245} : (undefined_tensor<1x512x104x104xf32>) -> gpu_tensor<1x512x104x104xf32>
    (%2) = "data(phi_kernel)" () {dtype:(pd_op.DataType)int32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"data",name:"_jst.1.var_1.0",op_name:"pd_op.data",origin_id:(Int64)246,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> undefined_tensor<1xi32>
    (%3) = "shadow_feed(phi_kernel)" (%2) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)247} : (undefined_tensor<1xi32>) -> gpu_tensor<1xi32>
    (%4) = "data(phi_kernel)" () {dtype:(pd_op.DataType)int32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"data",name:"_jst.2.var_2.0",op_name:"pd_op.data",origin_id:(Int64)248,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> undefined_tensor<1xi32>
    (%5) = "shadow_feed(phi_kernel)" (%4) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)249} : (undefined_tensor<1xi32>) -> gpu_tensor<1xi32>
    (%6) = "data(phi_kernel)" () {dtype:(pd_op.DataType)int32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"data",name:"_jst.3.var_3.0",op_name:"pd_op.data",origin_id:(Int64)250,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> undefined_tensor<4xi32>
    (%7) = "shadow_feed(phi_kernel)" (%6) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)251} : (undefined_tensor<4xi32>) -> gpu_tensor<4xi32>
    (%8) = "data(phi_kernel)" () {dtype:(pd_op.DataType)float32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:float32>,kernel_name:"data",name:"_jst.4.var_4.0",op_name:"pd_op.data",origin_id:(Int64)252,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> undefined_tensor<1x512x97x97xf32>
    (%9) = "shadow_feed(phi_kernel)" (%8) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:float32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)253} : (undefined_tensor<1x512x97x97xf32>) -> gpu_tensor<1x512x97x97xf32>
    (%10) = "cinn_runtime.jit_kernel" (%3, %5, %7, %1, %9) {exec_backend:(pd_op.Place)Place(gpu:0),kernel_info:(0x7f08b2ebb800),origin_id:(Int64)242} : (gpu_tensor<1xi32>, gpu_tensor<1xi32>, gpu_tensor<4xi32>, gpu_tensor<1x512x104x104xf32>, gpu_tensor<1x512x97x97xf32>) -> gpu_tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%10) {origin_id:(Int64)159,output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (gpu_tensor<1x1024x-1x-1xf32>) -> 
}

IR After inplace -------------------
{
    (%0) = "data(phi_kernel)" () {dtype:(pd_op.DataType)float32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:float32>,kernel_name:"data",name:"_jst.0.var_0.0",op_name:"pd_op.data",origin_id:(Int64)244,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,104,104],stop_gradient:[false],sym_shape_str:"shape[1, 512, 104, 104], data[NULL]"} : () -> undefined_tensor<1x512x104x104xf32>
    (%1) = "shadow_feed(phi_kernel)" (%0) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:float32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)245} : (undefined_tensor<1x512x104x104xf32>) -> gpu_tensor<1x512x104x104xf32>
    (%2) = "data(phi_kernel)" () {dtype:(pd_op.DataType)int32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"data",name:"_jst.1.var_1.0",op_name:"pd_op.data",origin_id:(Int64)246,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S0]"} : () -> undefined_tensor<1xi32>
    (%3) = "shadow_feed(phi_kernel)" (%2) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)247} : (undefined_tensor<1xi32>) -> gpu_tensor<1xi32>
    (%4) = "data(phi_kernel)" () {dtype:(pd_op.DataType)int32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"data",name:"_jst.2.var_2.0",op_name:"pd_op.data",origin_id:(Int64)248,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1],stop_gradient:[true],sym_shape_str:"shape[1], data[S1]"} : () -> undefined_tensor<1xi32>
    (%5) = "shadow_feed(phi_kernel)" (%4) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)249} : (undefined_tensor<1xi32>) -> gpu_tensor<1xi32>
    (%6) = "data(phi_kernel)" () {dtype:(pd_op.DataType)int32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"data",name:"_jst.3.var_3.0",op_name:"pd_op.data",origin_id:(Int64)250,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[4],stop_gradient:[true],sym_shape_str:"shape[4], data[S2, S3, S4, S5]"} : () -> undefined_tensor<4xi32>
    (%7) = "shadow_feed(phi_kernel)" (%6) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:int32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)251} : (undefined_tensor<4xi32>) -> gpu_tensor<4xi32>
    (%8) = "data(phi_kernel)" () {dtype:(pd_op.DataType)float32,kernel_key:<backend:Undefined|layout:Undefined(AnyLayout)|dtype:float32>,kernel_name:"data",name:"_jst.4.var_4.0",op_name:"pd_op.data",origin_id:(Int64)252,place:(pd_op.Place)Place(undefined:0),shape:(pd_op.IntArray)[1,512,97,97],stop_gradient:[false],sym_shape_str:"shape[1, 512, 97, 97], data[NULL]"} : () -> undefined_tensor<1x512x97x97xf32>
    (%9) = "shadow_feed(phi_kernel)" (%8) {dst_place_type:(Int32)1,kernel_key:<backend:GPU|layout:Undefined(AnyLayout)|dtype:float32>,kernel_name:"shadow_feed",op_name:"pd_op.shadow_feed",origin_id:(Int64)253} : (undefined_tensor<1x512x97x97xf32>) -> gpu_tensor<1x512x97x97xf32>
    (%10) = "cinn_runtime.jit_kernel" (%3, %5, %7, %1, %9) {exec_backend:(pd_op.Place)Place(gpu:0),kernel_info:(0x7f08b2ebb800),origin_id:(Int64)242} : (gpu_tensor<1xi32>, gpu_tensor<1xi32>, gpu_tensor<4xi32>, gpu_tensor<1x512x104x104xf32>, gpu_tensor<1x512x97x97xf32>) -> gpu_tensor<1x1024x-1x-1xf32>
    () = "builtin.shadow_output" (%10) {origin_id:(Int64)159,output_name:"output_0",sym_shape_str:"shape[1, 1024, 97, 97], data[NULL]"} : (gpu_tensor<1x1024x-1x-1xf32>) -> 
}

I1105 12:55:38.753173 983050 pir_interpreter.cc:1570] New Executor is Running ...
I1105 12:55:38.753639 983050 pir_interpreter.cc:1591] pir interpreter is running by trace mode ...
2024-11-05 12:55:38,755-PaddleLT-[INFO] ===> dy2st_eval_cinn 和 dy_eval 精度(precision)对比验证开始
2024-11-05 12:55:39,073-PaddleLT-[INFO] ===> dy2st_eval_cinn 和 dy_eval 精度对比通过~~~
2024-11-05 12:55:39,073-PaddleLT-[INFO] ===> 用例 ooooo 多执行器输出对比最终结果: [{'待测事项': 'dy2st_eval_cinn', '基线事项': 'dy_eval', 'precision': 'passed'}]
all prim enabled:  True
all prim enabled:  True
all prim enabled:  True
all prim enabled:  True
